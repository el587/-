javascript
     const { default: makeWASocket, DisconnectReason, useSingleFileAuthState } = require('@adiwajshing/baileys');
     const { Boom } = require('@hapi/boom');

     const { state, saveState } = useSingleFileAuthState('auth_info.json');

     async function startSock() {
         const sock = makeWASocket({
             auth: state
         });

         sock.ev.on('messages.upsert', async (m) => {
             const msg = m.messages[0];
             if (!msg.message) return;

             const messageType = Object.keys(msg.message)[0];
             const from = msg.key.remoteJid;

             if (messageType === 'conversation' && msg.message.conversation === 'مرحبا') {
                 await sock.sendMessage(from, { text: 'أهلاً بك! كيف يمكنني مساعدتك؟' });
             } else {
                 await sock.sendMessage(from, { text: 'عذرًا، لم أفهم طلبك.' });
             }
         });

         sock.ev.on('connection.update', (update) => {
             const { connection, lastDisconnect } = update;
             if (connection === 'close') {
                 const reason = (lastDisconnect.error as Boom)?.output?.statusCode;
                 if (reason === DisconnectReason.loggedOut) {
                     console.log('تم تسجيل الخروج، تحتاج لإعادة المسح QR');
                 } else {
                     console.log('تم قطع الاتصال، إعادة الاتصال...');
                     startSock();  // إعادة تشغيل البوت تلقائيًا
                 }
             }
         });

         sock.ev.on('creds.update', saveState);
     }

     startSock();
